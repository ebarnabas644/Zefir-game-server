trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageRepo: zefirgameserver

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'zefirgameserver'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/dockerfile'
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/manifests'
        artifact: 'manifests'
        publishLocation: 'pipeline'
        
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    azureContainerRegistrySecret: zefirregistryauth
    azureContainerUrl: 'zefirgameserver.azurecr.io'
    replicaNumber: 1
  jobs:
    - deployment: Deploy
      displayName: Deploy to AKS
      environment: 'zefir-server-dev.zefir-server'
      pool:
        vmImage: ubuntu-latest
      strategy:
       runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'manifests'
                targetPath: '$(Pipeline.Workspace)/manifests'
            - task: KubernetesManifest@1
              inputs:
                action: 'createSecret'
                namespace: 'zefir-server'
                secretType: 'dockerRegistry'
                secretName: '$(azureContainerRegistrySecret)'
                dockerRegistryEndpoint: 'zefirgameserver'
            - task: replacetokens@5
              displayName: Replace tokens
              inputs:
                rootDirectory: '$(Pipeline.Workspace)/manifests/'
                targetFiles: 'deployment.yml'
                encoding: 'auto'
                tokenPattern: 'custom'
                tokenPrefix: '#'
                tokenSuffix: '#'
                writeBOM: true
                actionOnMissing: 'warn'
                keepToken: false
                actionOnNoFiles: 'continue'
                enableTransforms: false
                enableRecursion: false
                useLegacyPattern: false
                enableTelemetry: true
            - task: KubernetesManifest@1
              inputs:
                action: 'deploy'
                namespace: 'zefir-server'
                manifests: |
                  $(Pipeline.Workspace)/manifests/cert-manager.yml
                  $(Pipeline.Workspace)/manifests/deployment.yml
                  $(Pipeline.Workspace)/manifests/service.yml
                  $(Pipeline.Workspace)/manifests/ingress.yml
                containers: '$(azureContainerUrl)/$(imageRepo):$(tag)'
                imagePullSecrets: '$(azureContainerRegistrySecret)'